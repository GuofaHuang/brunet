#!/bin/bash

NUM_NODES_PM=$1 #Number of nodes per machine variable
OUTPUT_FILE=$2 #this is the output from plcmd, it tells us on which machines was Brunet deployed
wait_time=45 #the number of seconds to wait after killing a node to check the ring again

ADDRESS_MAP_FILE="/home/jskong/results/results.txt.address_map"
DNS_MAP_FILE="/home/jskong/results/dnsmap.txt"
TESTLOG_FILE="/home/jskong/results/testlog.txt"
PID_FILE="/home/uclaee_brunet1/joe/pid.txt"
FAULTYLOG_FILE="/home/jskong/results/faultylog.txt"
REMOVAL_VERIFIER_FILE="/home/jskong/results/removal_verifier.txt"

~/scripts/slurp_verify $NUM_NODES_PM $OUTPUT_FILE

str=`tail -n 1 $REMOVAL_VERIFIER_FILE` 
correct=`echo "$str" | awk 'BEGIN{ FS=" " } { print $2 }'`
 
if [ "$correct" == "1" ]; then
  echo Ring correct 
  exit 0
else
  loop=0  
  while(( loop < 8 && correct != 1 )); do
    tac $TESTLOG_FILE | head -n 30 > $FAULTYLOG_FILE
    node_index=`~/scripts/find_faulty_node.py $FAULTYLOG_FILE`
    echo The node to kill is: $node_index

    while read word0 word1 word2; do
      if [ "$word0" == "$node_index" ]
        then ahaddress="$word2"  
        break
      fi
    done < $ADDRESS_MAP_FILE
    echo The ahaddress to kill is: $ahaddress

    while read word0 word1 word2; do
      if [ "$word0" == "$ahaddress" ]
        then dns="$word1"  
        instance="$word2"
        break
      fi
    done < $DNS_MAP_FILE
    echo The dns and instance to kill are: $dns $instance

    kill_command="cd joe/ && chmod +x kill_pid.sh && ./kill_pid.sh $instance"    
    ssh -l uclaee_brunet1 $dns $kill_command
    exit_code=$?;
    if [[ ${exit_code} == 0 ]]; then
      echo Success at killing the node on $dns with instance $instance
    fi

    sleep $wait_time
    ~/scripts/slurp_verify $NUM_NODES_PM $OUTPUT_FILE
    str=`tail -n 1 $REMOVAL_VERIFIER_FILE` 
    correct=`echo "$str" | awk 'BEGIN{ FS=" " } { print $2 }'`
    net_size=`echo "$str" | awk 'BEGIN{ FS=" " } { print $3 }'`
    if (( correct == 1 && net_size > 0 )); then
      echo Ring correct
      exit 0
    fi
    (( loop++ ))
  done
  echo Fail to fix the ring automatically, please check manually and kill sleep to continue  
  sleep 50m  
fi


