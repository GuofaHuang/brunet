#!/bin/bash

NUM_NODES_PM=$1 #Number of nodes per machine variable
OUTPUT_FILE=$2 #this is the output from plcmd, it tells us on which machines was Brunet deployed
#kill_bool=$3
SCRIPT_DIR=/home/jskong/scripts
EXE_NODES_FILE="/home/jskong/scripts/exe_nodes.txt"
ADDRESS_MAP_FILE="/home/jskong/results/results.txt.address_map"
ALIVE_RESULTS_FILE="/home/jskong/results/alive_results.txt"
RESULTS_FILE="/home/jskong/results/results.txt"
REMOVAL_VERIFIER_FILE="/home/jskong/results/removal_verifier.txt"
NET_EVOL_FILE="/home/jskong/results/net_evol.txt"
FAILED_NODES_FILE="/home/jskong/scripts/temp/failed_nodes.txt"

DUMMY_FILE="/home/jskong/scripts/temp/dummy.txt"
SLURP_FAIL_FILE="/home/jskong/scripts/temp/slurp_fail.txt"

MAX_SLURP_ITER=5
PAR=50
last_node=""

> $EXE_NODES_FILE
while read word0 word1; do
   if [ "$word1" == "done" ]
      then echo "$word0" >> $EXE_NODES_FILE      
      last_node="$word0"
   fi
done < $OUTPUT_FILE

#rm -rf ~/results/data/*

#pslurp -r -h $EXE_NODES_FILE  -o /tmp/out/ -e   /tmp/error/ -p $PAR -t 60 -L ~/results/data/ -l uclaee_brunet1 \
#/home/uclaee_brunet1/joe/data/ ./ > $DUMMY_FILE
~/scripts/prsyncsucks.py $EXE_NODES_FILE > $DUMMY_FILE

if [ -e $SLURP_FAIL_FILE ]
then
 rm $SLURP_FAIL_FILE
fi
echo Following nodes fail to obtain data:
while read word0 word1 word2; do
   if [ "$word0" == "Error" ]
      then echo "$word2" | awk 'BEGIN{ FS=":" } { print $1 }' >> $SLURP_FAIL_FILE
      echo "$word2" | awk 'BEGIN{ FS=":" } { print $1 }'
      #scp -r "uclaee_brunet1@""$word2"":/home/uclaee_brunet1/joe/data/" "~/results/data/""$word2"
   fi
done < $DUMMY_FILE


SLURP_ITER=0
while [[ -e $SLURP_FAIL_FILE && $SLURP_ITER < $MAX_SLURP_ITER ]]; do
  sleep 5
  #pslurp -r -h $SLURP_FAIL_FILE  -o /tmp/out/ -e /tmp/error/ -p $PAR -t 80 -L ~/results/data/ -l uclaee_brunet1 \
  #/home/uclaee_brunet1/joe/data/ ./ > $DUMMY_FILE
  ~/scripts/prsyncsucks.py $EXE_NODES_FILE > $DUMMY_FILE
  rm $SLURP_FAIL_FILE
  echo Following nodes fail to obtain data on iteration number $SLURP_ITER:
  while read word0 word1 word2; do
    if [ "$word0" == "Error" ]
      then echo "$word2" | awk 'BEGIN{ FS=":" } { print $1 }' >> $SLURP_FAIL_FILE
      echo "$word2" | awk 'BEGIN{ FS=":" } { print $1 }'
   fi
  done < $DUMMY_FILE
  (( SLURP_ITER++ ))
done

echo We are done with copying data to local directory

cd /home/jskong/results/
#./get_results $NUM_NODES_PM "brunetadd"
#./get_results $NUM_NODES_PM "alive"
#./get_results $CTM_RESULTS_FILE "ctm"
#./get_results $NUM_NODES_PM "console"
cat ./data/*/brunetadd* > $RESULTS_FILE 

echo The results are in $RESULTS_FILE #and $ALIVE_RESULTS_FILE

#./logtonmgraph.py $RESULTS_FILE
~/scripts/chronilog.py $RESULTS_FILE > $NET_EVOL_FILE
#./oldverifier $NM_FILE type 0 > $OLD_VERIFIER_FILE
#./verifier $NET_EVOL_FILE 0 $VERIFIER_FILE
#./removalverifier $NET_EVOL_FILE 0 $REMOVAL_VERIFIER_FILE
/home/behnam/public_html/verifier $NET_EVOL_FILE 0 $REMOVAL_VERIFIER_FILE

cp $RESULTS_FILE ./results_log/`date -u +%m_%d_%Y_%H_%M_%S`"results.txt"
cp $NET_EVOL_FILE ./results_log/`date -u +%m_%d_%Y_%H_%M_%S`"net_evol.txt"
cp $REMOVAL_VERIFIER_FILE ./results_log/`date -u +%m_%d_%Y_%H_%M_%S`"verifier.txt"
